#include "noise.compute"
#pragma kernel CSMain

RWTexture3D<float4> Grid;

int gridSize;
float offset;

int CoordToIndex(uint3 id)
{
    return gridSize * gridSize * id.x + gridSize * id.y + id.z;
}

float Fbm(float3 x)
{
    float value = 0.0;
    float amplitude = 1;
    float frequency = 1;

    for (int i = 0; i < 5; i++) {
        
        value += amplitude * snoise(frequency * x);
        x.xyz += offset * 0.003;
        amplitude *= 0.15;
        frequency *= 5;
    }
    
    return value;
}

[numthreads(4,4,4)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    
    float3 pos = float3((float) id.x, (float) id.y, (float) id.z);
    float3 posD = float3((float) id.x + 4321, (float) id.y + 1234, (float) id.z - 2048);
    pos.y += offset;

    float domainWrap = Fbm(posD / 50) * 30;
    
    float n = Fbm((pos += domainWrap) / 150) - 0.2;
    n = min(1, max(0, n));
    Grid[id.xyz] = float4(n, 0, 0, 0);
}
